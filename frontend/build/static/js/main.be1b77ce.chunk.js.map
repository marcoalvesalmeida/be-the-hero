{"version":3,"sources":["assets/logo.svg","assets/heroes.png","services/api.js","pages/Logon/index.js","pages/Register/index.js","pages/Profile/index.js","pages/NewIncident/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","api","axios","create","baseURL","Logon","useState","id","setId","history","useHistory","e","a","preventDefault","post","response","localStorage","setItem","data","name","push","alert","className","src","Logo","alt","onSubmit","type","placeholder","value","onChange","target","to","size","color","Heroes","Register","setName","email","setEmail","whatsapp","setWhatsapp","city","setCity","uf","setUf","logoImg","style","width","Profile","incidents","setIncidents","ong_id","getItem","ong_name","delete","headers","Authorization","filter","incident","useEffect","get","then","onClick","clear","map","key","title","description","Intl","NumberFormat","currency","format","handleDelete","setTitle","setDescription","setValue","Routes","path","exact","component","NewIncident","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.be1b77ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7eea718b.svg\";","module.exports = __webpack_public_path__ + \"static/media/heroes.1f4b5508.png\";","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3333'\n});\n\nexport default api;","import React, { useState } from 'react';\nimport { FiLogIn } from 'react-icons/fi';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport './styles.css';\nimport Logo from '../../assets/logo.svg';\nimport Heroes from '../../assets/heroes.png';\nimport api from '../../services/api';\n\nexport default function Logon() {\n  const [id, setId] = useState(\"\");\n\n  const history = useHistory();\n\n  async function handleLogin(e){\n    e.preventDefault();\n\n    try {\n      const response = await api.post('session', { id });\n      localStorage.setItem('ong_id', id);\n      localStorage.setItem('ong_name', response.data.name);\n\n      history.push('/profile');\n    } catch (error) {\n      alert('Erro ao fazer login, tente novamente!');\n    }\n  }\n\n  return (\n    <div className=\"logon-container\">\n      <section className=\"form\">\n        <img src={Logo} alt=\"Be The Hero\"/>  \n        <form onSubmit={handleLogin}>\n          <h1>Faça seu logon</h1>\n\n          <input type=\"text\" placeholder=\"Sua ID\" \n            value={id} \n            onChange={e => setId(e.target.value)} \n          />\n          <button className=\"button\" type=\"submit\">Vamos Lá!</button>\n\n          <Link className=\"back-link\" to=\"/register\">\n            <FiLogIn size=\"16\" color=\"#E02041\" />\n            Não tenho Cadastro\n          </Link>\n        </form>\n      </section>\n      <img src={Heroes} alt=\"Heroes\"/>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\n\nimport './styles.css';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\n\nexport default function Register() {\n\n   const history = useHistory();\n\n   const [name, setName] = useState(\"\");\n   const [email, setEmail] = useState(\"\");\n   const [whatsapp, setWhatsapp] = useState(\"\");\n   const [city, setCity] = useState(\"\");\n   const [uf, setUf] = useState(\"\");\n\n   async function handleRegister(e){\n      e.preventDefault();\n      \n      const data = {\n         name, \n         email,\n         whatsapp,\n         city,\n         uf\n      }\n\n      try{\n         const response = await api.post('ongs', data);\n         alert(`Sua ID de acesso: ${response.data.id}`);\n\n         history.push('/');\n      }catch(err){\n         alert('Erro no cadastro, tente novamente!');         \n      }\n   }\n\n   return (\n   <div className=\"register-container\">\n      <div className=\"content\">\n         <section>\n            <img src={logoImg} alt=\"Be The Hero\"/>\n\n            <h1>Cadastro</h1>\n            <p>Faça seu cadastro, entre na plataforma e ajude pessoas a encontrarem os casos da sua ONG.</p>\n\n            <Link className=\"back-link\" to=\"/\">\n               <FiArrowLeft size={16} color=\"#E02041\" />\n               Voltar\n            </Link>            \n         </section>\n\n         <form onSubmit={handleRegister}>\n            <input \n               placeholder=\"Nome da ONG\" \n               value={name}\n               onChange={e => setName(e.target.value)}\n            />\n            <input type=\"email\" \n               placeholder=\"E-mail\" \n               value={email}\n               onChange={e => setEmail(e.target.value)}\n            />\n            <input \n               placeholder=\"WhatsApp\" \n               value={whatsapp}\n               onChange={e => setWhatsapp(e.target.value)}\n            />\n            <div className=\"input-group\">\n               <input \n                  placeholder=\"Cidade\" \n                  value={city}\n                  onChange={e => setCity(e.target.value)}   \n               />\n               <input \n                  placeholder=\"UF\" \n                  style={{ width: 80 }} \n                  value={uf}\n                  onChange={e => setUf(e.target.value)}\n               />\n            </div>\n            <button className=\"button\" type=\"submit\">Cadastrar</button>\n         </form>\n      </div>\n   </div>\n   );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiPower, FiTrash2 } from 'react-icons/fi';\n\nimport logoImg from '../../assets/logo.svg';\nimport './styles.css';\nimport api from '../../services/api';\n\nexport default function Profile() {\n   const history = useHistory();\n\n   const [incidents, setIncidents] = useState([]);\n\n   const ong_id = localStorage.getItem('ong_id');\n   const ong_name = localStorage.getItem('ong_name');\n\n   useEffect(() => {\n      api.get('incidents', {\n         headers: {\n            Authorization: ong_id\n         }\n      }).then(response => {\n         setIncidents(response.data);\n      });\n   },[ong_id]);\n\n   async function handleDelete(id){\n      try {\n         await api.delete(`incidents/${id}`, {\n            headers: {\n               Authorization: ong_id\n            }\n         });\n\n         setIncidents(incidents.filter(incident => incident.id !== id));\n      } catch (err) {\n         alert('Não foi possível deletar, tente novamente!');\n      }\n   }\n\n   function handleLogout(){\n      localStorage.clear();\n\n      history.push('/');\n   }\n\n   return (\n      <div className=\"profile-container\">\n         <header>\n            <img src={logoImg} alt=\"Be The Hero\" />\n            <span>Bem-vinda, {ong_name}</span>\n\n            <Link className=\"button\" to=\"/incidents/new\">Cadastrar novo caso</Link>\n            <button type=\"button\" onClick={handleLogout}>\n               <FiPower size={18} />\n            </button>\n         </header>\n\n         <h1>Casos Cadastrados</h1>\n\n         <ul>\n            { incidents.map( incident => (\n               <li key={incident.id}>\n                  <strong>CASO:</strong>\n                  <p>{incident.title}</p>\n\n                  <strong>DESCRIÇÃO:</strong>\n                  <p>{incident.description}</p>\n\n                  <strong>VALOR:</strong>\n                  <p>{Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(incident.value)}</p>\n\n                  <button type=\"button\" onClick={() => handleDelete(incident.id)}>\n                     <FiTrash2 size={20} color=\"#a8a8b3\" />\n                  </button>\n               </li>\n            )) }\n         </ul>\n      </div>\n   )\n}","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\n\nimport './styles.css';\nimport logoImg from '../../assets/logo.svg';\nimport api from '../../services/api';\n\nexport default function Register() {\n   const history = useHistory();\n   const [title, setTitle] = useState(\"\");\n   const [description, setDescription] = useState(\"\");\n   const [value, setValue] = useState(\"\");\n\n   const ong_id = localStorage.getItem('ong_id');\n\n   async function handleNew(e){\n      e.preventDefault();\n\n      const data = {\n         title,\n         description,\n         value\n      }\n\n      try {\n         await api.post('incidents', data, {\n            headers: {\n               Authorization: ong_id\n            }\n         });\n         \n         history.push('/profile'); \n      } catch (err) {\n         alert(\"Não foi possível cadastrar o caso, tente novamente!\");\n      }\n\n   }\n\n   return (\n      <div className=\"new-incident-container\">\n         <div className=\"content\">\n            <section>\n               <img src={logoImg} alt=\"Be The Hero\"/>\n\n               <h1>Cadastrar novo caso</h1>\n               <p>Descreva o caso detalhadamente para encontrar um herói para resolver isso.</p>\n\n               <Link className=\"back-link\" to=\"/profile\">\n                  <FiArrowLeft size={16} />\n                  Voltar para home\n               </Link>            \n            </section>\n\n            <form onSubmit={handleNew}>\n               <input \n                  placeholder=\"Título do caso\"\n                  value={title}\n                  onChange={e => setTitle(e.target.value)} \n               />\n               <textarea \n                  placeholder=\"Descrição\" \n                  value={description}\n                  onChange={e => setDescription(e.target.value)} \n               />\n\n               <input \n                  placeholder=\"Valor em reais\" \n                  value={value}\n                  onChange={e => setValue(e.target.value)} \n               />\n               \n               <button className=\"button\" type=\"submit\">Cadastrar</button>\n            </form>\n         </div>\n      </div>\n   )\n}","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Logon from './pages/Logon';\nimport Register from './pages/Register';\nimport Profile from './pages/Profile';\nimport NewIncident from './pages/NewIncident';\n\nexport default function Routes() {\n   return (\n      <BrowserRouter>\n         <Switch>\n            <Route path=\"/be-the-hero/frontend/site/\" exact component={Logon} />\n            <Route path=\"/be-the-hero/frontend/site/register\" component={Register} />\n            <Route path=\"/be-the-hero/frontend/site/profile\" component={Profile} />\n            <Route path=\"/be-the-hero/frontend/site/incidents/new\" component={NewIncident} />\n         </Switch>\n      </BrowserRouter>\n   )\n}","import React from 'react';\nimport Routes from './routes';\nimport './global.css';\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}